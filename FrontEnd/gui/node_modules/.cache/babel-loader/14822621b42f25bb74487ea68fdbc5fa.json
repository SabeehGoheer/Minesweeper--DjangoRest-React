{"ast":null,"code":"import _classCallCheck from \"/Users/sabeehgoheer/Development/Django Apps/Minesweeper/FrontEnd/gui/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sabeehgoheer/Development/Django Apps/Minesweeper/FrontEnd/gui/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sabeehgoheer/Development/Django Apps/Minesweeper/FrontEnd/gui/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sabeehgoheer/Development/Django Apps/Minesweeper/FrontEnd/gui/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sabeehgoheer/Development/Django Apps/Minesweeper/FrontEnd/gui/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sabeehgoheer/Development/Django Apps/Minesweeper/FrontEnd/gui/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport BoardMap from \"./components/boardmap\";\nimport Header from \"./components/header\";\nimport \"./minsweeper.css\";\n\nvar Minesweeper =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Minesweeper, _React$Component);\n\n  function Minesweeper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Minesweeper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Minesweeper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      gridSize: 3,\n      numberOfBombs: 3,\n      flagCount: 3,\n      gameStatus: \"waiting\"\n    };\n\n    _this.updateGameStatus = function (status) {\n      _this.setState({\n        gameStatus: status\n      });\n    };\n\n    _this.startGame = function () {\n      _this.setState({\n        gameStatus: \"running\"\n      });\n    };\n\n    _this.gameOver = function () {\n      _this.setState({\n        gameStatus: \"finished\"\n      });\n    };\n\n    _this.restart = function () {\n      alert(\"Game is restarted\");\n\n      _this.setState({\n        gameStatus: \"waiting\"\n      });\n    };\n\n    _this.updateFlagCount = function (count) {\n      _this.setState({\n        flagCount: _this.state.numberOfBombs - count\n      });\n    };\n\n    _this.checkWinner = function (flagCount, openedCells) {\n      if (openedCells + flagCount >= _this.state.gridSize * _this.state.gridSize) {\n        alert(\"Congratulations! You won.\");\n\n        _this.setState({\n          gameStatus: \"finished\"\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Minesweeper, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"minesweeper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Header, {\n        flagCount: this.state.flagCount,\n        restart: this.restart,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(BoardMap, {\n        gridSize: this.state.gridSize,\n        numberOfBombs: this.state.numberOfBombs,\n        gameStatus: this.state.gameStatus,\n        updateGameStatus: this.updateGameStatus,\n        updateFlagCount: this.updateFlagCount,\n        checkWinner: this.checkWinner,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Minesweeper;\n}(React.Component);\n\nReactDOM.render(React.createElement(Minesweeper, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67\n  },\n  __self: this\n}), document.querySelector(\"#root\"));","map":{"version":3,"sources":["/Users/sabeehgoheer/Development/Django Apps/Minesweeper/FrontEnd/gui/src/index.js"],"names":["React","ReactDOM","BoardMap","Header","Minesweeper","state","gridSize","numberOfBombs","flagCount","gameStatus","updateGameStatus","status","setState","startGame","gameOver","restart","alert","updateFlagCount","count","checkWinner","openedCells","Component","render","document","querySelector"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,OAAO,kBAAP;;IACMC,W;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,CADJ;AAENC,MAAAA,aAAa,EAAE,CAFT;AAGNC,MAAAA,SAAS,EAAE,CAHL;AAINC,MAAAA,UAAU,EAAE;AAJN,K;;UAORC,gB,GAAmB,UAAAC,MAAM,EAAI;AAC3B,YAAKC,QAAL,CAAc;AACZH,QAAAA,UAAU,EAAEE;AADA,OAAd;AAGD,K;;UACDE,S,GAAY,YAAM;AAChB,YAAKD,QAAL,CAAc;AACZH,QAAAA,UAAU,EAAE;AADA,OAAd;AAGD,K;;UAEDK,Q,GAAW,YAAM;AACf,YAAKF,QAAL,CAAc;AACZH,QAAAA,UAAU,EAAE;AADA,OAAd;AAGD,K;;UACDM,O,GAAU,YAAM;AACdC,MAAAA,KAAK,CAAC,mBAAD,CAAL;;AACA,YAAKJ,QAAL,CAAc;AACZH,QAAAA,UAAU,EAAE;AADA,OAAd;AAGD,K;;UACDQ,e,GAAkB,UAAAC,KAAK,EAAI;AACzB,YAAKN,QAAL,CAAc;AACZJ,QAAAA,SAAS,EAAE,MAAKH,KAAL,CAAWE,aAAX,GAA2BW;AAD1B,OAAd;AAGD,K;;UACDC,W,GAAc,UAACX,SAAD,EAAYY,WAAZ,EAA4B;AACxC,UAAIA,WAAW,GAAGZ,SAAd,IAA2B,MAAKH,KAAL,CAAWC,QAAX,GAAsB,MAAKD,KAAL,CAAWC,QAAhE,EAA0E;AACxEU,QAAAA,KAAK,CAAC,2BAAD,CAAL;;AACA,cAAKJ,QAAL,CAAc;AACZH,UAAAA,UAAU,EAAE;AADA,SAAd;AAGD;AACF,K;;;;;;;6BACQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWG,SAA9B;AAAyC,QAAA,OAAO,EAAE,KAAKO,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,QAAD;AACE,QAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWC,QADvB;AAEE,QAAA,aAAa,EAAE,KAAKD,KAAL,CAAWE,aAF5B;AAGE,QAAA,UAAU,EAAE,KAAKF,KAAL,CAAWI,UAHzB;AAIE,QAAA,gBAAgB,EAAE,KAAKC,gBAJzB;AAKE,QAAA,eAAe,EAAE,KAAKO,eALxB;AAME,QAAA,WAAW,EAAE,KAAKE,WANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAaD;;;;EAzDuBnB,KAAK,CAACqB,S;;AA4DhCpB,QAAQ,CAACqB,MAAT,CAAgB,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAiCC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAjC","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport BoardMap from \"./components/boardmap\";\nimport Header from \"./components/header\";\n\nimport \"./minsweeper.css\";\nclass Minesweeper extends React.Component {\n  state = {\n    gridSize: 3,\n    numberOfBombs: 3,\n    flagCount: 3,\n    gameStatus: \"waiting\"\n  };\n\n  updateGameStatus = status => {\n    this.setState({\n      gameStatus: status\n    });\n  };\n  startGame = () => {\n    this.setState({\n      gameStatus: \"running\"\n    });\n  };\n\n  gameOver = () => {\n    this.setState({\n      gameStatus: \"finished\"\n    });\n  };\n  restart = () => {\n    alert(\"Game is restarted\");\n    this.setState({\n      gameStatus: \"waiting\"\n    });\n  };\n  updateFlagCount = count => {\n    this.setState({\n      flagCount: this.state.numberOfBombs - count\n    });\n  };\n  checkWinner = (flagCount, openedCells) => {\n    if (openedCells + flagCount >= this.state.gridSize * this.state.gridSize) {\n      alert(\"Congratulations! You won.\");\n      this.setState({\n        gameStatus: \"finished\"\n      });\n    }\n  };\n  render() {\n    return (\n      <div className=\"minesweeper\">\n        <Header flagCount={this.state.flagCount} restart={this.restart} />\n        <BoardMap\n          gridSize={this.state.gridSize}\n          numberOfBombs={this.state.numberOfBombs}\n          gameStatus={this.state.gameStatus}\n          updateGameStatus={this.updateGameStatus}\n          updateFlagCount={this.updateFlagCount}\n          checkWinner={this.checkWinner}\n        />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Minesweeper />, document.querySelector(\"#root\"));\n"]},"metadata":{},"sourceType":"module"}