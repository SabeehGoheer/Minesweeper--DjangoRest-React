{"ast":null,"code":"import _classCallCheck from \"/Users/sabeehgoheer/Development/Django Apps/Minesweeper/FrontEnd/gui/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sabeehgoheer/Development/Django Apps/Minesweeper/FrontEnd/gui/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sabeehgoheer/Development/Django Apps/Minesweeper/FrontEnd/gui/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sabeehgoheer/Development/Django Apps/Minesweeper/FrontEnd/gui/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sabeehgoheer/Development/Django Apps/Minesweeper/FrontEnd/gui/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sabeehgoheer/Development/Django Apps/Minesweeper/FrontEnd/gui/src/components/boardmap.js\";\nimport React from \"react\";\nimport axios from \"axios\";\n\nvar BoardMap =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BoardMap, _React$Component);\n\n  function BoardMap(props) {\n    var _this;\n\n    _classCallCheck(this, BoardMap);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BoardMap).call(this, props));\n    _this.state = {\n      rows: [],\n      cells: []\n    };\n    return _this;\n  }\n\n  _createClass(BoardMap, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.handleServerRequest(\"get\");\n    }\n  }, {\n    key: \"startGame\",\n    value: function startGame() {\n      this.handleServerRequest(\"post\");\n    }\n  }, {\n    key: \"makeRows\",\n    value: function makeRows() {\n      var board = [];\n\n      for (var row = 0; row < this.props.gridSize; row++) {\n        board.push([]);\n\n        for (var col = 0; col < this.props.gridSize; col++) {\n          board[row].push(this.state.cell[row * this.props.gridSize + col]);\n        }\n      }\n\n      this.setState({\n        rows: board\n      });\n      console.table(board);\n    }\n  }, {\n    key: \"handleServerRequest\",\n    value: function handleServerRequest(requestType) {\n      var _this2 = this;\n\n      switch (requestType) {\n        case \"post\":\n          return axios.post(\"http://localhost:8000/api/\", {\n            gridSize: this.props.gridSize,\n            numberOfBombs: this.props.numberOfBombs\n          }).then(function (res) {\n            console.log(res.data);\n\n            _this2.setState({\n              cells: res.data\n            });\n\n            _this2.makeRows();\n          }).catch(function (err) {\n            console.err(err);\n          });\n\n        case \"get\":\n          return axios.get(\"http://localhost:8000/api/\").then(function (res) {\n            console.log(res.data);\n            if (res.data == \"\") _this2.startGame();else {\n              _this2.setState({\n                cells: res.data\n              });\n\n              _this2.makeRows();\n            }\n          });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"boardmap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return BoardMap;\n}(React.Component);\n\nexport default BoardMap;","map":{"version":3,"sources":["/Users/sabeehgoheer/Development/Django Apps/Minesweeper/FrontEnd/gui/src/components/boardmap.js"],"names":["React","axios","BoardMap","props","state","rows","cells","handleServerRequest","board","row","gridSize","push","col","cell","setState","console","table","requestType","post","numberOfBombs","then","res","log","data","makeRows","catch","err","get","startGame","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,KAAK,EAAE;AAFI,KAAb;AAFiB;AAMlB;;;;wCAEmB;AAClB,WAAKC,mBAAL,CAAyB,KAAzB;AACD;;;gCAEW;AACV,WAAKA,mBAAL,CAAyB,MAAzB;AACD;;;+BAEU;AACT,UAAIC,KAAK,GAAG,EAAZ;;AAEA,WAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,KAAKN,KAAL,CAAWO,QAAnC,EAA6CD,GAAG,EAAhD,EAAoD;AAClDD,QAAAA,KAAK,CAACG,IAAN,CAAW,EAAX;;AACA,aAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,KAAKT,KAAL,CAAWO,QAAnC,EAA6CE,GAAG,EAAhD,EAAoD;AAClDJ,UAAAA,KAAK,CAACC,GAAD,CAAL,CAAWE,IAAX,CAAgB,KAAKP,KAAL,CAAWS,IAAX,CAAgBJ,GAAG,GAAG,KAAKN,KAAL,CAAWO,QAAjB,GAA4BE,GAA5C,CAAhB;AACD;AACF;;AAED,WAAKE,QAAL,CAAc;AACZT,QAAAA,IAAI,EAAEG;AADM,OAAd;AAGAO,MAAAA,OAAO,CAACC,KAAR,CAAcR,KAAd;AACD;;;wCAEmBS,W,EAAa;AAAA;;AAC/B,cAAQA,WAAR;AACE,aAAK,MAAL;AACE,iBAAOhB,KAAK,CACTiB,IADI,CACC,4BADD,EAC+B;AAClCR,YAAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWO,QADa;AAElCS,YAAAA,aAAa,EAAE,KAAKhB,KAAL,CAAWgB;AAFQ,WAD/B,EAKJC,IALI,CAKC,UAAAC,GAAG,EAAI;AACXN,YAAAA,OAAO,CAACO,GAAR,CAAYD,GAAG,CAACE,IAAhB;;AACA,YAAA,MAAI,CAACT,QAAL,CAAc;AACZR,cAAAA,KAAK,EAAEe,GAAG,CAACE;AADC,aAAd;;AAGA,YAAA,MAAI,CAACC,QAAL;AACD,WAXI,EAYJC,KAZI,CAYE,UAAAC,GAAG,EAAI;AACZX,YAAAA,OAAO,CAACW,GAAR,CAAYA,GAAZ;AACD,WAdI,CAAP;;AAeF,aAAK,KAAL;AACE,iBAAOzB,KAAK,CAAC0B,GAAN,CAAU,4BAAV,EAAwCP,IAAxC,CAA6C,UAAAC,GAAG,EAAI;AACzDN,YAAAA,OAAO,CAACO,GAAR,CAAYD,GAAG,CAACE,IAAhB;AACA,gBAAIF,GAAG,CAACE,IAAJ,IAAY,EAAhB,EAAoB,MAAI,CAACK,SAAL,GAApB,KACK;AACH,cAAA,MAAI,CAACd,QAAL,CAAc;AACZR,gBAAAA,KAAK,EAAEe,GAAG,CAACE;AADC,eAAd;;AAGA,cAAA,MAAI,CAACC,QAAL;AACD;AACF,WATM,CAAP;AAlBJ;AA6BD;;;6BAEQ;AACP,aAAO;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EAnEoBxB,KAAK,CAAC6B,S;;AAsE7B,eAAe3B,QAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nclass BoardMap extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rows: [],\n      cells: []\n    };\n  }\n\n  componentDidMount() {\n    this.handleServerRequest(\"get\");\n  }\n\n  startGame() {\n    this.handleServerRequest(\"post\");\n  }\n\n  makeRows() {\n    let board = [];\n\n    for (let row = 0; row < this.props.gridSize; row++) {\n      board.push([]);\n      for (let col = 0; col < this.props.gridSize; col++) {\n        board[row].push(this.state.cell[row * this.props.gridSize + col]);\n      }\n    }\n\n    this.setState({\n      rows: board\n    });\n    console.table(board);\n  }\n\n  handleServerRequest(requestType) {\n    switch (requestType) {\n      case \"post\":\n        return axios\n          .post(\"http://localhost:8000/api/\", {\n            gridSize: this.props.gridSize,\n            numberOfBombs: this.props.numberOfBombs\n          })\n          .then(res => {\n            console.log(res.data);\n            this.setState({\n              cells: res.data\n            });\n            this.makeRows();\n          })\n          .catch(err => {\n            console.err(err);\n          });\n      case \"get\":\n        return axios.get(\"http://localhost:8000/api/\").then(res => {\n          console.log(res.data);\n          if (res.data == \"\") this.startGame();\n          else {\n            this.setState({\n              cells: res.data\n            });\n            this.makeRows();\n          }\n        });\n    }\n  }\n\n  render() {\n    return <div className=\"boardmap\" />;\n  }\n}\n\nexport default BoardMap;\n"]},"metadata":{},"sourceType":"module"}